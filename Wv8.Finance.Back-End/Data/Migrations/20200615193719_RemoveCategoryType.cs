// <auto-generated />

using Microsoft.EntityFrameworkCore.Migrations;

namespace PersonalFinance.Data.Migrations
{
    public partial class RemoveCategoryType : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // Note that this should have taken into account parent categories and budgets, but since none exist that
            // will be impacted by the removal of category types, they have been ignored. 
            
            // Determine categories that have both expense and income category
            migrationBuilder.Sql(@"
                CREATE TABLE #DoubleCategories (expenseId INT, incomeId INT);
                
                INSERT INTO #DoubleCategories
                SELECT [c1].[Id], [c2].[Id]
                FROM [dbo].Categories c1
                    INNER JOIN [dbo].[Categories] c2 ON [c1].[Description] = [c2].[Description]
                WHERE [c1].[Type] = 1 AND [c2].[Type] = 2;");
            // Change (parent) category of categories or (recurring) transactions to expense counterpart
            migrationBuilder.Sql(@"
                UPDATE dbo.Transactions SET CategoryId = (SELECT expenseId FROM #DoubleCategories WHERE CategoryId = incomeId) WHERE CategoryId IN (SELECT incomeId FROM #DoubleCategories);
                UPDATE dbo.RecurringTransactions SET CategoryId = (SELECT expenseId FROM #DoubleCategories WHERE CategoryId = incomeId) WHERE CategoryId IN (SELECT incomeId FROM #DoubleCategories);
                UPDATE dbo.Categories SET ParentCategoryId = (SELECT expenseId FROM #DoubleCategories WHERE ParentCategoryId = incomeId) WHERE ParentCategoryId IN (SELECT incomeId FROM #DoubleCategories);
            ");
            // Delete income categories
            migrationBuilder.Sql("DELETE FROM dbo.Categories WHERE Id IN (SELECT incomeId FROM #DoubleCategories);");
            
            migrationBuilder.DropColumn(
                name: "Type",
                table: "Categories");
            
            // Set Income transactions to External
            migrationBuilder.Sql("UPDATE [dbo].[Transactions] SET [Type] = 1 WHERE [Type] = 2;");
            // Set Transfer transactions to Internal
            migrationBuilder.Sql("UPDATE [dbo].[Transactions] SET [Type] = 2 WHERE [Type] = 3;");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "Type",
                table: "Categories",
                type: "int",
                nullable: false,
                defaultValue: 0);
        }
    }
}
